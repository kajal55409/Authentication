"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _reactNative = require("react-native");
var _react = _interopRequireWildcard(require("react"));
var _countryListWithDialCodeAndFlag = _interopRequireDefault(require("country-list-with-dial-code-and-flag"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
var CountryModals = function CountryModals(_ref) {
  var visible = _ref.visible,
    closeModal = _ref.closeModal,
    _ref$onSection = _ref.onSection,
    onSection = _ref$onSection === void 0 ? function (code) {
      return console.log(code);
    } : _ref$onSection,
    _ref$onSelectFlag = _ref.onSelectFlag,
    onSelectFlag = _ref$onSelectFlag === void 0 ? function (flag) {
      return console.log(flag);
    } : _ref$onSelectFlag,
    _ref$defaultCountry = _ref.defaultCountry,
    defaultCountry = _ref$defaultCountry === void 0 ? "GH" : _ref$defaultCountry;
  var countries = _countryListWithDialCodeAndFlag["default"].getAll();
  var textInputRef = (0, _react.useRef)(null);
  var _useState = (0, _react.useState)(),
    _useState2 = _slicedToArray(_useState, 2),
    allCountry = _useState2[0],
    setAllCountry = _useState2[1];
  var _useState3 = (0, _react.useState)([]),
    _useState4 = _slicedToArray(_useState3, 2),
    filteredCountry = _useState4[0],
    setFilteredCountry = _useState4[1];
  var _useState5 = (0, _react.useState)(""),
    _useState6 = _slicedToArray(_useState5, 2),
    searchTerm = _useState6[0],
    setSearchTerm = _useState6[1];
  (0, _react.useEffect)(function () {
    if (searchTerm === "") {
      setFilteredCountry(allCountry);
    } else {
      var filtered = allCountry === null || allCountry === void 0 ? void 0 : allCountry.filter(function (item) {
        return item.name.toLowerCase().includes(searchTerm.toLowerCase()) || item.dial_code.includes(searchTerm);
      });
      setFilteredCountry(filtered);
    }
  }, [searchTerm, allCountry]);
  (0, _react.useEffect)(function () {
    var countries = _countryListWithDialCodeAndFlag["default"].getAll();
    setAllCountry(countries);
    setFilteredCountry(countries);
  }, []);
  var onSelection = (0, _react.useCallback)(function (item) {
    onSection === null || onSection === void 0 ? void 0 : onSection(item === null || item === void 0 ? void 0 : item.code);
    onSelectFlag === null || onSelectFlag === void 0 ? void 0 : onSelectFlag(item === null || item === void 0 ? void 0 : item.flag);
    closeModal === null || closeModal === void 0 ? void 0 : closeModal();
  }, [onSection, onSelectFlag, closeModal]);
  function findCountryByCodeOrName(query) {
    return countries.find(function (country) {
      var data = country === null || country === void 0 ? void 0 : country.data;
      return data.code === query || data.name.toLowerCase() === query.toLowerCase();
    });
  }
  (0, _react.useEffect)(function () {
    var defaultSelectedCountry = findCountryByCodeOrName(defaultCountry);
    if (defaultSelectedCountry) {
      onSection === null || onSection === void 0 ? void 0 : onSection(defaultSelectedCountry === null || defaultSelectedCountry === void 0 ? void 0 : defaultSelectedCountry.dial_code);
      onSelectFlag === null || onSelectFlag === void 0 ? void 0 : onSelectFlag(defaultSelectedCountry === null || defaultSelectedCountry === void 0 ? void 0 : defaultSelectedCountry.flag);
    }
  }, []);
  return /*#__PURE__*/_react["default"].createElement(_reactNative.Modal, {
    animationType: "slide",
    transparent: true,
    visible: visible,
    onRequestClose: closeModal
  }, /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
    style: styles.container
  }, /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
    style: {
      flexDirection: "row",
      justifyContent: "space-between",
      marginBottom: 20,
      alignItems: "center"
    }
  }, /*#__PURE__*/_react["default"].createElement(_reactNative.Text, {
    style: {
      color: "black",
      fontSize: 20
    },
    onPress: closeModal
  }, "Select a country"), /*#__PURE__*/_react["default"].createElement(_reactNative.TouchableOpacity, {
    style: {
      height: 30,
      width: 30,
      borderRadius: 30,
      backgroundColor: "black",
      alignItems: "center",
      justifyContent: "center"
    },
    onPress: closeModal
  }, /*#__PURE__*/_react["default"].createElement(_reactNative.Text, {
    style: {
      color: "#ffffff",
      fontSize: 20
    }
  }, "X"))), /*#__PURE__*/_react["default"].createElement(_reactNative.View, null, /*#__PURE__*/_react["default"].createElement(_reactNative.TextInput
  //   ref={textInputRef}
  , {
    style: {
      width: "100%",
      height: 40,
      borderRadius: 10,
      borderWidth: 1,
      paddingHorizontal: 10
      // borderColor: lightColors.primary,
    },

    value: searchTerm,
    onChangeText: function onChangeText(text) {
      return setSearchTerm(text);
    },
    placeholder: "Search"
    //   onBlur={handleBlur}
  }), /*#__PURE__*/_react["default"].createElement(_reactNative.FlatList, {
    data: filteredCountry,
    numColumns: 3,
    renderItem: function renderItem(_ref2) {
      var item = _ref2.item;
      var itemObject = {
        flag: item === null || item === void 0 ? void 0 : item.flag,
        code: item === null || item === void 0 ? void 0 : item.dial_code
      };
      return /*#__PURE__*/_react["default"].createElement(_reactNative.TouchableOpacity
      // @ts-ignore
      , {
        onPress: function onPress() {
          return onSelection(itemObject);
        },
        style: {
          backgroundColor: "#ffffff",
          marginVertical: 20,
          borderWidth: 1,
          height: 100,
          borderRadius: 10,
          alignItems: "center",
          justifyContent: "center",
          width: "30%",
          marginHorizontal: 5
        }
      }, /*#__PURE__*/_react["default"].createElement(_reactNative.Text, {
        style: {
          fontSize: 20,
          textAlign: "center"
        }
      }, item === null || item === void 0 ? void 0 : item.dial_code), /*#__PURE__*/_react["default"].createElement(_reactNative.Text, {
        style: {
          textAlign: "center"
        }
      }, item === null || item === void 0 ? void 0 : item.flag), /*#__PURE__*/_react["default"].createElement(_reactNative.Text, {
        style: {
          textAlign: "center"
        }
      }, item === null || item === void 0 ? void 0 : item.name));
    },
    keyExtractor: function keyExtractor(item) {
      return item.code;
    },
    onEndReachedThreshold: 0
  }))));
};
var _default = CountryModals;
exports["default"] = _default;
var styles = _reactNative.StyleSheet.create({
  container: {
    flexGrow: 1,
    marginTop: 30,
    backgroundColor: "#ffffff",
    paddingHorizontal: 20
  }
});