"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _reactNative = require("react-native");
var _react = _interopRequireDefault(require("react"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
var Divider = function Divider(_ref) {
  var _ref$size = _ref.size,
    size = _ref$size === void 0 ? 10 : _ref$size,
    _ref$width = _ref.width,
    width = _ref$width === void 0 ? 50 : _ref$width,
    _ref$orientation = _ref.orientation,
    orientation = _ref$orientation === void 0 ? "Horizontal" : _ref$orientation,
    _ref$color = _ref.color,
    color = _ref$color === void 0 ? "#000000" : _ref$color,
    _ref$VeriticalHeight = _ref.VeriticalHeight,
    VeriticalHeight = _ref$VeriticalHeight === void 0 ? 50 : _ref$VeriticalHeight;
  var _useWindowDimensions = (0, _reactNative.useWindowDimensions)(),
    screenWidth = _useWindowDimensions.width;
  var defaultWidth = width === "full" ? screenWidth : width;
  var defaultVerticalHeight = VeriticalHeight === "full" ? "100%" : VeriticalHeight;

  // if the orientation is "Vertical"

  return /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
    style: [styles.container, {
      width: orientation === "Horizontal" ? defaultWidth : size
    }
    // { height: orientation === "Horizontal" & size },
    ]
  }, /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
    style: [{
      backgroundColor: color
    }, {
      height: orientation === "Horizontal" ? size : defaultVerticalHeight
    }, {
      width: orientation === "Horizontal" ? "100%" : size
    }]
  }));
};
var _default = Divider;
exports["default"] = _default;
var styles = _reactNative.StyleSheet.create({
  container: {
    position: "relative",
    // Added this line
    margin: 5,
    backgroundColor: "white"
  }
});